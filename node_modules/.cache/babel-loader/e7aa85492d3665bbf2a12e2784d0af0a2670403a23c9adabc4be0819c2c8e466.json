{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import { Chart } from 'chart.js/auto';\n// // Assurez-vous d'installer cette bibliothèque via npm/yarn\n\n// function Dashboard() {\n//   const [salesData, setSalesData] = useState([]);\n\n//   // Fonction pour récupérer les données de ventes depuis l'API ou la base de données\n//   const fetchSalesData = async () => {\n//     // Ici, vous effectueriez une requête API ou une requête de base de données pour obtenir les données de ventes\n//     // Remplacez ce code par votre logique de récupération des données\n//     const response = await fetch('url_de_votre_api/ventes');\n//     const data = await response.json();\n//     setSalesData(data);\n//   };\n\n//   // Utilisation de useEffect pour appeler fetchSalesData une fois que le composant est monté\n//   useEffect(() => {\n//     fetchSalesData();\n//   }, []);\n\n//   // Créer un graphique à l'aide de Chart.js\n//   useEffect(() => {\n//     const ctx = document.getElementById('salesChart').getContext('2d');\n//     new Chart(ctx, {\n//       type: 'bar',\n//       data: {\n//         labels: salesData.map(item => item.month), // Supposons que salesData contienne des objets avec une propriété 'month'\n//         datasets: [{\n//           label: 'Ventes mensuelles',\n//           data: salesData.map(item => item.amount), // Supposons que salesData contienne des objets avec une propriété 'amount'\n//           backgroundColor: 'rgba(54, 162, 235, 0.6)',\n//           borderColor: 'rgba(54, 162, 235, 1)',\n//           borderWidth: 1\n//         }]\n//       },\n//       options: {\n//         scales: {\n//           yAxes: [{\n//             ticks: {\n//               beginAtZero: true\n//             }\n//           }]\n//         }\n//       }\n//     });\n//   }, [salesData]);\n\n//   return (\n//     <div>\n//       <h1>Tableau de bord de gestion de facturation</h1>\n//       <div>\n//         <canvas id=\"salesChart\" width=\"400\" height=\"200\"></canvas>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default Dashboard;","map":{"version":3,"names":[],"sources":["C:/Users/Bonjour/Desktop/react/frontend/src/components/dashbords.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { Chart } from 'chart.js/auto';\r\n// // Assurez-vous d'installer cette bibliothèque via npm/yarn\r\n\r\n// function Dashboard() {\r\n//   const [salesData, setSalesData] = useState([]);\r\n\r\n//   // Fonction pour récupérer les données de ventes depuis l'API ou la base de données\r\n//   const fetchSalesData = async () => {\r\n//     // Ici, vous effectueriez une requête API ou une requête de base de données pour obtenir les données de ventes\r\n//     // Remplacez ce code par votre logique de récupération des données\r\n//     const response = await fetch('url_de_votre_api/ventes');\r\n//     const data = await response.json();\r\n//     setSalesData(data);\r\n//   };\r\n\r\n//   // Utilisation de useEffect pour appeler fetchSalesData une fois que le composant est monté\r\n//   useEffect(() => {\r\n//     fetchSalesData();\r\n//   }, []);\r\n\r\n//   // Créer un graphique à l'aide de Chart.js\r\n//   useEffect(() => {\r\n//     const ctx = document.getElementById('salesChart').getContext('2d');\r\n//     new Chart(ctx, {\r\n//       type: 'bar',\r\n//       data: {\r\n//         labels: salesData.map(item => item.month), // Supposons que salesData contienne des objets avec une propriété 'month'\r\n//         datasets: [{\r\n//           label: 'Ventes mensuelles',\r\n//           data: salesData.map(item => item.amount), // Supposons que salesData contienne des objets avec une propriété 'amount'\r\n//           backgroundColor: 'rgba(54, 162, 235, 0.6)',\r\n//           borderColor: 'rgba(54, 162, 235, 1)',\r\n//           borderWidth: 1\r\n//         }]\r\n//       },\r\n//       options: {\r\n//         scales: {\r\n//           yAxes: [{\r\n//             ticks: {\r\n//               beginAtZero: true\r\n//             }\r\n//           }]\r\n//         }\r\n//       }\r\n//     });\r\n//   }, [salesData]);\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>Tableau de bord de gestion de facturation</h1>\r\n//       <div>\r\n//         <canvas id=\"salesChart\" width=\"400\" height=\"200\"></canvas>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Dashboard;\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}