{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bonjour\\\\Desktop\\\\react\\\\frontend\\\\src\\\\components\\\\client.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import './Client.css';\n\n// const Client = () => {\n//   const [showNewClientForm, setShowNewClientForm] = useState(false);\n//   const [newClient, setNewClient] = useState({\n//     type: '',\n//     reference: '',\n//     entreprise: '',\n//     prenom: '',\n//     nom: '',\n//     email: '',\n//     numTel: ''\n//   });\n//   const [clients, setClients] = useState([]); \n//   const [clientCount, setClientCount] = useState(0); \n//   const [selectedClient, setSelectedClient] = useState(null);\n\n//   const handleNewClient = () => {\n//     setShowNewClientForm(true);\n//   };\n\n//   const handleCancel = () => {\n//     setShowNewClientForm(false);\n//   };\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setNewClient(prevState => ({\n//       ...prevState,\n//       [name]: value\n//     }));\n//   };\n\n//   const handleSaveClient = () => {\n//     setClientCount(prevCount => prevCount + 1);\n\n//     const client = {\n//       numero: clientCount + 1,\n//       nom: newClient.nom,\n//       prenom: newClient.prenom,\n//       facturesEnAttente: 0,\n//       facturesPayees: 0 \n//     };\n\n//     setClients(prevClients => [...prevClients, client]);\n\n//     setNewClient({\n//       type: '',\n//       reference: '',\n//       entreprise: '',\n//       prenom: '',\n//       nom: '',\n//       email: '',\n//       numTel: ''\n//     });\n\n//     setShowNewClientForm(false);\n//   };\n\n//   const handleClientClick = (client) => {\n//     setSelectedClient(client);\n//   };\n\n//   const handleEditClient = () => {\n//   };\n\n//   const handleDeleteClient = () => {\n//     if (selectedClient) {\n//       const updatedClients = clients.filter(client => client !== selectedClient);\n//       setClients(updatedClients);\n//       setSelectedClient(null);\n//     }\n//   };\n\n//   return (\n//     <div className=\"client-page\">\n//       <div className=\"left-side\">\n//         <div className=\"left-top\">\n//           <input type=\"text\" placeholder=\"Recherche...\" />\n//           <button onClick={handleNewClient} className=\"green-button\">Nouveau client</button>\n//         </div>\n//         <div className=\"main-content\">\n//           {showNewClientForm ? (\n//             <div className=\"new-client-form\">\n//               <h2>Nouveau client</h2>\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"type de client\">type de client :</label>\n//                 <select id=\"type de client\">\n//                   <option value=\"Client professionnel\">Client professionnel</option>\n//                   <option value=\"Client particulier\">Client particulier</option>\n//                 </select>\n//               </div>\n//               <div className=\"form-group\">\n//                 <label>Nom de l'entreprise: </label>\n//                 <input type=\"text\" name=\"reference\" value={newClient.reference} onChange={handleChange} />\n//               </div>\n//               <div className=\"form-group\">\n//                 <label>Nom: </label>\n//                 <input type=\"text\" name=\"nom\" value={newClient.nom} onChange={handleChange} />\n//               </div>\n//               <div className=\"form-group\">\n//                 <label>Prenom: </label>\n//                 <input type=\"text\" name=\"prenom\" value={newClient.prenom} onChange={handleChange} />\n//               </div>\n//               <div className=\"form-group\">\n//                 <label>Cin: </label>\n//                 <input type=\"text\" name=\"cin\" value={newClient.cin} onChange={handleChange} />\n//               </div>\n//               <div className=\"form-group\">\n//                 <label>Numéro de téléphone:</label>\n//                 <input type=\"text\" name=\"numTel\" value={newClient.numTel} onChange={handleChange} />\n//               </div>\n//               <div className=\"form-group\">\n//                 <label>Email :</label>\n//                 <input type=\"text\" name=\"email\" value={newClient.email} onChange={handleChange} />\n//               </div>\n//               <div className=\"form-group\">\n//                 <button onClick={handleCancel} className=\"blue-button\">Annuler</button>\n//                 <button onClick={handleSaveClient} className=\"blue-button\">Enregistrer</button>\n//               </div>\n//             </div>\n//           ) : (\n//             <div>\n//               <h1>Clients</h1>\n//               <p>Clients enregistrés avec votre abonnement : {clients.length}/5</p>\n//               <table>\n//                 <thead>\n//                   <tr>\n//                     <th>Numéro</th>\n//                     <th>Client</th>\n//                     <th>Factures en attente</th>\n//                     <th>Factures payées</th>\n//                   </tr>\n//                 </thead>\n//                 <tbody>\n//                   {clients.map((client, index) => (\n//                     <tr key={index} onClick={() => handleClientClick(client)}>\n//                       <td>{client.numero}</td>\n//                       <td>{`${client.prenom} ${client.nom}`}</td>\n//                       <td>{client.facturesEnAttente}</td>\n//                       <td>{client.facturesPayees}</td>\n//                     </tr>\n//                   ))}\n//                 </tbody>\n//               </table>\n//             </div>\n//           )}\n//         </div>\n//       </div>\n//       <div className=\"right-side\">\n//         <h1>Mes Clients</h1>\n//         {selectedClient ? (\n//           <div>\n//             <h2>Détails du Client</h2>\n//             <p>Nom: {selectedClient.nom}</p>\n//             <p>Prénom: {selectedClient.prenom}</p>\n//             <p>Factures en attente: {selectedClient.facturesEnAttente}</p>\n//             <p>Factures payées: {selectedClient.facturesPayees}</p>\n//             <div>\n//               <button onClick={handleEditClient}>Modifier</button>\n//               <button onClick={handleDeleteClient}>Supprimer</button>\n//             </div>\n//             <button onClick={() => setSelectedClient(null)}>Fermer</button>\n//           </div>\n//         ) : (\n//           <p>Sélectionnez un client dans la liste de gauche pour voir ses détails</p>\n//         )}\n//         {/* <button>Importer Client</button> */}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Client;\n\nimport React, { useState } from 'react';\nimport './Client.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Client = () => {\n  _s();\n  const [showNewClientForm, setShowNewClientForm] = useState(false);\n  const [newClient, setNewClient] = useState({\n    type: '',\n    reference: '',\n    entreprise: '',\n    prenom: '',\n    nom: '',\n    email: '',\n    numTel: ''\n  });\n  const [clients, setClients] = useState([]);\n  const [clientCount, setClientCount] = useState(0);\n  const [selectedClient, setSelectedClient] = useState(null);\n  const handleNewClient = () => {\n    setShowNewClientForm(true);\n  };\n  const handleCancel = () => {\n    setShowNewClientForm(false);\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewClient(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  const handleSaveClient = () => {\n    setClientCount(prevCount => prevCount + 1);\n    const client = {\n      numero: clientCount + 1,\n      nom: newClient.nom,\n      prenom: newClient.prenom,\n      facturesEnAttente: 0,\n      facturesPayees: 0\n    };\n    setClients(prevClients => [...prevClients, client]);\n    setNewClient({\n      type: '',\n      reference: '',\n      entreprise: '',\n      prenom: '',\n      nom: '',\n      email: '',\n      numTel: ''\n    });\n    setShowNewClientForm(false);\n  };\n  const handleClientClick = client => {\n    setSelectedClient(client);\n  };\n  const handleEditClient = () => {\n    if (selectedClient) {\n      alert(`\n        Type de client : ${selectedClient.type}\n        Reference : ${selectedClient.reference}\n        Entreprise : ${selectedClient.entreprise}\n        Prénom : ${selectedClient.prenom}\n        Nom : ${selectedClient.nom}\n        Email : ${selectedClient.email}\n        Numéro de téléphone : ${selectedClient.numTel}\n      `);\n    } else {\n      alert(\"Veuillez sélectionner un client à modifier.\");\n    }\n  };\n  const handleDeleteClient = () => {\n    if (selectedClient) {\n      const updatedClients = clients.filter(client => client !== selectedClient);\n      setClients(updatedClients);\n      setSelectedClient(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"client-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-side\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-top\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Recherche...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNewClient,\n          className: \"green-button\",\n          children: \"Nouveau client\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content\",\n        children: showNewClientForm ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-client-form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Clients\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Clients enregistr\\xE9s avec votre abonnement : \", clients.length, \"/5\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right-side\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Mes Clients\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this), selectedClient ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"D\\xE9tails du Client\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Nom: \", selectedClient.nom]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Pr\\xE9nom: \", selectedClient.prenom]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Factures en attente: \", selectedClient.facturesEnAttente]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Factures pay\\xE9es: \", selectedClient.facturesPayees]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleEditClient,\n            children: \"Modifier\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleDeleteClient,\n            children: \"Supprimer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSelectedClient(null),\n          children: \"Fermer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"S\\xE9lectionnez un client dans la liste de gauche pour voir ses d\\xE9tails\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 266,\n    columnNumber: 5\n  }, this);\n};\n_s(Client, \"+kPf4E3N8esVyWo/48oRgMVwyps=\");\n_c = Client;\nexport default Client;\nvar _c;\n$RefreshReg$(_c, \"Client\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Client","_s","showNewClientForm","setShowNewClientForm","newClient","setNewClient","type","reference","entreprise","prenom","nom","email","numTel","clients","setClients","clientCount","setClientCount","selectedClient","setSelectedClient","handleNewClient","handleCancel","handleChange","e","name","value","target","prevState","handleSaveClient","prevCount","client","numero","facturesEnAttente","facturesPayees","prevClients","handleClientClick","handleEditClient","alert","handleDeleteClient","updatedClients","filter","className","children","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","_c","$RefreshReg$"],"sources":["C:/Users/Bonjour/Desktop/react/frontend/src/components/client.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import './Client.css';\r\n\r\n// const Client = () => {\r\n//   const [showNewClientForm, setShowNewClientForm] = useState(false);\r\n//   const [newClient, setNewClient] = useState({\r\n//     type: '',\r\n//     reference: '',\r\n//     entreprise: '',\r\n//     prenom: '',\r\n//     nom: '',\r\n//     email: '',\r\n//     numTel: ''\r\n//   });\r\n//   const [clients, setClients] = useState([]); \r\n//   const [clientCount, setClientCount] = useState(0); \r\n//   const [selectedClient, setSelectedClient] = useState(null);\r\n\r\n//   const handleNewClient = () => {\r\n//     setShowNewClientForm(true);\r\n//   };\r\n\r\n//   const handleCancel = () => {\r\n//     setShowNewClientForm(false);\r\n//   };\r\n\r\n//   const handleChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setNewClient(prevState => ({\r\n//       ...prevState,\r\n//       [name]: value\r\n//     }));\r\n//   };\r\n\r\n//   const handleSaveClient = () => {\r\n//     setClientCount(prevCount => prevCount + 1);\r\n\r\n//     const client = {\r\n//       numero: clientCount + 1,\r\n//       nom: newClient.nom,\r\n//       prenom: newClient.prenom,\r\n//       facturesEnAttente: 0,\r\n//       facturesPayees: 0 \r\n//     };\r\n\r\n//     setClients(prevClients => [...prevClients, client]);\r\n\r\n//     setNewClient({\r\n//       type: '',\r\n//       reference: '',\r\n//       entreprise: '',\r\n//       prenom: '',\r\n//       nom: '',\r\n//       email: '',\r\n//       numTel: ''\r\n//     });\r\n\r\n//     setShowNewClientForm(false);\r\n//   };\r\n\r\n//   const handleClientClick = (client) => {\r\n//     setSelectedClient(client);\r\n//   };\r\n\r\n//   const handleEditClient = () => {\r\n//   };\r\n\r\n//   const handleDeleteClient = () => {\r\n//     if (selectedClient) {\r\n//       const updatedClients = clients.filter(client => client !== selectedClient);\r\n//       setClients(updatedClients);\r\n//       setSelectedClient(null);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"client-page\">\r\n//       <div className=\"left-side\">\r\n//         <div className=\"left-top\">\r\n//           <input type=\"text\" placeholder=\"Recherche...\" />\r\n//           <button onClick={handleNewClient} className=\"green-button\">Nouveau client</button>\r\n//         </div>\r\n//         <div className=\"main-content\">\r\n//           {showNewClientForm ? (\r\n//             <div className=\"new-client-form\">\r\n//               <h2>Nouveau client</h2>\r\n//               <div className=\"form-group\">\r\n//                 <label htmlFor=\"type de client\">type de client :</label>\r\n//                 <select id=\"type de client\">\r\n//                   <option value=\"Client professionnel\">Client professionnel</option>\r\n//                   <option value=\"Client particulier\">Client particulier</option>\r\n//                 </select>\r\n//               </div>\r\n//               <div className=\"form-group\">\r\n//                 <label>Nom de l'entreprise: </label>\r\n//                 <input type=\"text\" name=\"reference\" value={newClient.reference} onChange={handleChange} />\r\n//               </div>\r\n//               <div className=\"form-group\">\r\n//                 <label>Nom: </label>\r\n//                 <input type=\"text\" name=\"nom\" value={newClient.nom} onChange={handleChange} />\r\n//               </div>\r\n//               <div className=\"form-group\">\r\n//                 <label>Prenom: </label>\r\n//                 <input type=\"text\" name=\"prenom\" value={newClient.prenom} onChange={handleChange} />\r\n//               </div>\r\n//               <div className=\"form-group\">\r\n//                 <label>Cin: </label>\r\n//                 <input type=\"text\" name=\"cin\" value={newClient.cin} onChange={handleChange} />\r\n//               </div>\r\n//               <div className=\"form-group\">\r\n//                 <label>Numéro de téléphone:</label>\r\n//                 <input type=\"text\" name=\"numTel\" value={newClient.numTel} onChange={handleChange} />\r\n//               </div>\r\n//               <div className=\"form-group\">\r\n//                 <label>Email :</label>\r\n//                 <input type=\"text\" name=\"email\" value={newClient.email} onChange={handleChange} />\r\n//               </div>\r\n//               <div className=\"form-group\">\r\n//                 <button onClick={handleCancel} className=\"blue-button\">Annuler</button>\r\n//                 <button onClick={handleSaveClient} className=\"blue-button\">Enregistrer</button>\r\n//               </div>\r\n//             </div>\r\n//           ) : (\r\n//             <div>\r\n//               <h1>Clients</h1>\r\n//               <p>Clients enregistrés avec votre abonnement : {clients.length}/5</p>\r\n//               <table>\r\n//                 <thead>\r\n//                   <tr>\r\n//                     <th>Numéro</th>\r\n//                     <th>Client</th>\r\n//                     <th>Factures en attente</th>\r\n//                     <th>Factures payées</th>\r\n//                   </tr>\r\n//                 </thead>\r\n//                 <tbody>\r\n//                   {clients.map((client, index) => (\r\n//                     <tr key={index} onClick={() => handleClientClick(client)}>\r\n//                       <td>{client.numero}</td>\r\n//                       <td>{`${client.prenom} ${client.nom}`}</td>\r\n//                       <td>{client.facturesEnAttente}</td>\r\n//                       <td>{client.facturesPayees}</td>\r\n//                     </tr>\r\n//                   ))}\r\n//                 </tbody>\r\n//               </table>\r\n//             </div>\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n//       <div className=\"right-side\">\r\n//         <h1>Mes Clients</h1>\r\n//         {selectedClient ? (\r\n//           <div>\r\n//             <h2>Détails du Client</h2>\r\n//             <p>Nom: {selectedClient.nom}</p>\r\n//             <p>Prénom: {selectedClient.prenom}</p>\r\n//             <p>Factures en attente: {selectedClient.facturesEnAttente}</p>\r\n//             <p>Factures payées: {selectedClient.facturesPayees}</p>\r\n//             <div>\r\n//               <button onClick={handleEditClient}>Modifier</button>\r\n//               <button onClick={handleDeleteClient}>Supprimer</button>\r\n//             </div>\r\n//             <button onClick={() => setSelectedClient(null)}>Fermer</button>\r\n//           </div>\r\n//         ) : (\r\n//           <p>Sélectionnez un client dans la liste de gauche pour voir ses détails</p>\r\n//         )}\r\n//         {/* <button>Importer Client</button> */}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Client;\r\n\r\nimport React, { useState } from 'react';\r\nimport './Client.css';\r\n\r\nconst Client = () => {\r\n  const [showNewClientForm, setShowNewClientForm] = useState(false);\r\n  const [newClient, setNewClient] = useState({\r\n    type: '',\r\n    reference: '',\r\n    entreprise: '',\r\n    prenom: '',\r\n    nom: '',\r\n    email: '',\r\n    numTel: ''\r\n  });\r\n  const [clients, setClients] = useState([]); \r\n  const [clientCount, setClientCount] = useState(0); \r\n  const [selectedClient, setSelectedClient] = useState(null);\r\n\r\n  const handleNewClient = () => {\r\n    setShowNewClientForm(true);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setShowNewClientForm(false);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewClient(prevState => ({\r\n      ...prevState,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const handleSaveClient = () => {\r\n    setClientCount(prevCount => prevCount + 1);\r\n\r\n    const client = {\r\n      numero: clientCount + 1,\r\n      nom: newClient.nom,\r\n      prenom: newClient.prenom,\r\n      facturesEnAttente: 0,\r\n      facturesPayees: 0 \r\n    };\r\n\r\n    setClients(prevClients => [...prevClients, client]);\r\n\r\n    setNewClient({\r\n      type: '',\r\n      reference: '',\r\n      entreprise: '',\r\n      prenom: '',\r\n      nom: '',\r\n      email: '',\r\n      numTel: ''\r\n    });\r\n\r\n    setShowNewClientForm(false);\r\n  };\r\n\r\n  const handleClientClick = (client) => {\r\n    setSelectedClient(client);\r\n  };\r\n\r\n  const handleEditClient = () => {\r\n    if (selectedClient) {\r\n      alert(`\r\n        Type de client : ${selectedClient.type}\r\n        Reference : ${selectedClient.reference}\r\n        Entreprise : ${selectedClient.entreprise}\r\n        Prénom : ${selectedClient.prenom}\r\n        Nom : ${selectedClient.nom}\r\n        Email : ${selectedClient.email}\r\n        Numéro de téléphone : ${selectedClient.numTel}\r\n      `);\r\n    } else {\r\n      alert(\"Veuillez sélectionner un client à modifier.\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteClient = () => {\r\n    if (selectedClient) {\r\n      const updatedClients = clients.filter(client => client !== selectedClient);\r\n      setClients(updatedClients);\r\n      setSelectedClient(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"client-page\">\r\n      <div className=\"left-side\">\r\n        <div className=\"left-top\">\r\n          <input type=\"text\" placeholder=\"Recherche...\" />\r\n          <button onClick={handleNewClient} className=\"green-button\">Nouveau client</button>\r\n        </div>\r\n        <div className=\"main-content\">\r\n          {showNewClientForm ? (\r\n            <div className=\"new-client-form\">\r\n              {/* New client form */}\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <h1>Clients</h1>\r\n              <p>Clients enregistrés avec votre abonnement : {clients.length}/5</p>\r\n              {/* Client list */}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"right-side\">\r\n        <h1>Mes Clients</h1>\r\n        {selectedClient ? (\r\n          <div>\r\n            <h2>Détails du Client</h2>\r\n            <p>Nom: {selectedClient.nom}</p>\r\n            <p>Prénom: {selectedClient.prenom}</p>\r\n            <p>Factures en attente: {selectedClient.facturesEnAttente}</p>\r\n            <p>Factures payées: {selectedClient.facturesPayees}</p>\r\n            <div>\r\n              <button onClick={handleEditClient}>Modifier</button>\r\n              <button onClick={handleDeleteClient}>Supprimer</button>\r\n            </div>\r\n            <button onClick={() => setSelectedClient(null)}>Fermer</button>\r\n          </div>\r\n        ) : (\r\n          <p>Sélectionnez un client dans la liste de gauche pour voir ses détails</p>\r\n        )}\r\n        {/* <button>Importer Client</button> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Client;\r\n\r\n\r\n\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC;IACzCS,IAAI,EAAE,EAAE;IACRC,SAAS,EAAE,EAAE;IACbC,UAAU,EAAE,EAAE;IACdC,MAAM,EAAE,EAAE;IACVC,GAAG,EAAE,EAAE;IACPC,KAAK,EAAE,EAAE;IACTC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}