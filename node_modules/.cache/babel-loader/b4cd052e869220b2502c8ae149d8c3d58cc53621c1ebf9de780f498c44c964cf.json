{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bonjour\\\\Desktop\\\\react\\\\frontend\\\\src\\\\components\\\\SalesChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport Chart from 'chart.js/auto';\nimport './SalesChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SalesChart = ({\n  salesData\n}) => {\n  _s();\n  const chartRef = useRef(null);\n  useEffect(() => {\n    if (salesData.length > 0) {\n      const labels = salesData.map(sale => sale.date);\n      const data = salesData.map(sale => sale.amount);\n      const ctx = chartRef.current.getContext('2d');\n      new Chart(ctx, {\n        type: 'line',\n        data: {\n          labels: labels,\n          datasets: [{\n            label: 'Ventes',\n            data: data,\n            borderColor: 'blue',\n            backgroundColor: 'rgba(0, 0, 255, 0.2)'\n          }]\n        },\n        options: {\n          scales: {\n            x: {\n              title: {\n                display: true,\n                text: 'Date'\n              }\n            },\n            y: {\n              title: {\n                display: true,\n                text: 'Montant de vente'\n              }\n            }\n          }\n        }\n      });\n    }\n  }, [salesData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Graphique des ventes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: chartRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(SalesChart, \"X+1SfQQ6xefXNU27aQW843M7cTw=\");\n_c = SalesChart;\nexport default SalesChart;\nvar _c;\n$RefreshReg$(_c, \"SalesChart\");","map":{"version":3,"names":["React","useEffect","useRef","Chart","jsxDEV","_jsxDEV","SalesChart","salesData","_s","chartRef","length","labels","map","sale","date","data","amount","ctx","current","getContext","type","datasets","label","borderColor","backgroundColor","options","scales","x","title","display","text","y","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["C:/Users/Bonjour/Desktop/react/frontend/src/components/SalesChart.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport Chart from 'chart.js/auto'; \r\nimport './SalesChart';\r\n\r\nconst SalesChart = ({ salesData }) => {\r\n  const chartRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (salesData.length > 0) {\r\n      const labels = salesData.map(sale => sale.date); \r\n      const data = salesData.map(sale => sale.amount); \r\n\r\n      const ctx = chartRef.current.getContext('2d');\r\n\r\n      new Chart(ctx, {\r\n        type: 'line',\r\n        data: {\r\n          labels: labels,\r\n          datasets: [{\r\n            label: 'Ventes',\r\n            data: data,\r\n            borderColor: 'blue',\r\n            backgroundColor: 'rgba(0, 0, 255, 0.2)', \r\n          }]\r\n        },\r\n        options: {\r\n          scales: {\r\n            x: {\r\n              title: {\r\n                display: true,\r\n                text: 'Date'\r\n              }\r\n            },\r\n            y: {\r\n              title: {\r\n                display: true,\r\n                text: 'Montant de vente'\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }, [salesData]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Graphique des ventes</h2>\r\n      <canvas ref={chartRef}></canvas>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SalesChart;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACpC,MAAMC,QAAQ,GAAGP,MAAM,CAAC,IAAI,CAAC;EAE7BD,SAAS,CAAC,MAAM;IACd,IAAIM,SAAS,CAACG,MAAM,GAAG,CAAC,EAAE;MACxB,MAAMC,MAAM,GAAGJ,SAAS,CAACK,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC;MAC/C,MAAMC,IAAI,GAAGR,SAAS,CAACK,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACG,MAAM,CAAC;MAE/C,MAAMC,GAAG,GAAGR,QAAQ,CAACS,OAAO,CAACC,UAAU,CAAC,IAAI,CAAC;MAE7C,IAAIhB,KAAK,CAACc,GAAG,EAAE;QACbG,IAAI,EAAE,MAAM;QACZL,IAAI,EAAE;UACJJ,MAAM,EAAEA,MAAM;UACdU,QAAQ,EAAE,CAAC;YACTC,KAAK,EAAE,QAAQ;YACfP,IAAI,EAAEA,IAAI;YACVQ,WAAW,EAAE,MAAM;YACnBC,eAAe,EAAE;UACnB,CAAC;QACH,CAAC;QACDC,OAAO,EAAE;UACPC,MAAM,EAAE;YACNC,CAAC,EAAE;cACDC,KAAK,EAAE;gBACLC,OAAO,EAAE,IAAI;gBACbC,IAAI,EAAE;cACR;YACF,CAAC;YACDC,CAAC,EAAE;cACDH,KAAK,EAAE;gBACLC,OAAO,EAAE,IAAI;gBACbC,IAAI,EAAE;cACR;YACF;UACF;QACF;MACF,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACvB,SAAS,CAAC,CAAC;EAEf,oBACEF,OAAA;IAAA2B,QAAA,gBACE3B,OAAA;MAAA2B,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7B/B,OAAA;MAAQgC,GAAG,EAAE5B;IAAS;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7B,CAAC;AAEV,CAAC;AAAC5B,EAAA,CA/CIF,UAAU;AAAAgC,EAAA,GAAVhC,UAAU;AAiDhB,eAAeA,UAAU;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}