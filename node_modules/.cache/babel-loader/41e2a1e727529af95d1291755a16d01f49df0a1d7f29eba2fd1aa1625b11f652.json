{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bonjour\\\\Desktop\\\\react\\\\frontend\\\\src\\\\components\\\\Client.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Client.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Client = () => {\n  _s();\n  const [showNewClientForm, setShowNewClientForm] = useState(false);\n  const [newClient, setNewClient] = useState({\n    type: '',\n    reference: '',\n    entreprise: '',\n    prenom: '',\n    nom: '',\n    cin: '',\n    email: '',\n    numTel: ''\n  });\n  const [clients, setClients] = useState([]); // Nouvel état pour stocker les clients enregistrés\n  const [clientCount, setClientCount] = useState(0); // Nouvel état pour le compteur de clients\n\n  const handleNewClient = () => {\n    setShowNewClientForm(true);\n  };\n  const handleCancel = () => {\n    setShowNewClientForm(false);\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewClient(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  const handleSaveClient = () => {\n    // Incrémenter le compteur de clients\n    setClientCount(prevCount => prevCount + 1);\n\n    // Créer un nouvel objet client avec les informations saisies dans le formulaire\n    const client = {\n      numero: clientCount + 1,\n      nom: newClient.nom,\n      prenom: newClient.prenom,\n      cin: newClient.cin,\n      type: newClient.type,\n      reference: newClient.reference,\n      entreprise: newClient.entreprise,\n      email: newClient.email,\n      numTel: newClient.numTel,\n      facturesEnAttente: 0,\n      // Valeur par défaut\n      facturesPayees: 0 // Valeur par défaut\n    };\n\n    // Ajouter le nouveau client à la liste des clients enregistrés\n    setClients(prevClients => [...prevClients, client]);\n\n    // Réinitialiser le formulaire de nouveau client\n    setNewClient({\n      type: '',\n      reference: '',\n      entreprise: '',\n      prenom: '',\n      nom: '',\n      cin: '',\n      email: '',\n      numTel: ''\n    });\n\n    // Masquer le formulaire de nouveau client\n    setShowNewClientForm(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"client-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-sidebar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), showNewClientForm ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-client-form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(Client, \"8ie9t1ngmXCv8mZBeOiMwRoeeGc=\");\n_c = Client;\nexport default Client;\nvar _c;\n$RefreshReg$(_c, \"Client\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Client","_s","showNewClientForm","setShowNewClientForm","newClient","setNewClient","type","reference","entreprise","prenom","nom","cin","email","numTel","clients","setClients","clientCount","setClientCount","handleNewClient","handleCancel","handleChange","e","name","value","target","prevState","handleSaveClient","prevCount","client","numero","facturesEnAttente","facturesPayees","prevClients","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Bonjour/Desktop/react/frontend/src/components/Client.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Client.css';\r\n\r\nconst Client = () => {\r\n  const [showNewClientForm, setShowNewClientForm] = useState(false);\r\n  const [newClient, setNewClient] = useState({\r\n    type: '',\r\n    reference: '',\r\n    entreprise: '',\r\n    prenom: '',\r\n    nom: '',\r\n    cin: '',\r\n    email: '',\r\n    numTel: ''\r\n  });\r\n  const [clients, setClients] = useState([]); // Nouvel état pour stocker les clients enregistrés\r\n  const [clientCount, setClientCount] = useState(0); // Nouvel état pour le compteur de clients\r\n\r\n  const handleNewClient = () => {\r\n    setShowNewClientForm(true);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setShowNewClientForm(false);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewClient(prevState => ({\r\n      ...prevState,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const handleSaveClient = () => {\r\n    // Incrémenter le compteur de clients\r\n    setClientCount(prevCount => prevCount + 1);\r\n\r\n    // Créer un nouvel objet client avec les informations saisies dans le formulaire\r\n    const client = {\r\n      numero: clientCount + 1,\r\n      nom: newClient.nom,\r\n      prenom: newClient.prenom,\r\n      cin: newClient.cin,\r\n      type: newClient.type,\r\n      reference: newClient.reference,\r\n      entreprise: newClient.entreprise,\r\n      email: newClient.email,\r\n      numTel: newClient.numTel,\r\n      facturesEnAttente: 0, // Valeur par défaut\r\n      facturesPayees: 0 // Valeur par défaut\r\n    };\r\n\r\n    // Ajouter le nouveau client à la liste des clients enregistrés\r\n    setClients(prevClients => [...prevClients, client]);\r\n\r\n    // Réinitialiser le formulaire de nouveau client\r\n    setNewClient({\r\n      type: '',\r\n      reference: '',\r\n      entreprise: '',\r\n      prenom: '',\r\n      nom: '',\r\n      cin: '',\r\n      email: '',\r\n      numTel: ''\r\n    });\r\n\r\n    // Masquer le formulaire de nouveau client\r\n    setShowNewClientForm(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"client-page\">\r\n      <div className=\"left-sidebar\">\r\n        {/* Contenu de la barre latérale gauche */}\r\n      </div>\r\n      <div className=\"main-content\">\r\n        {/* Contenu principal */}\r\n      </div>\r\n      {showNewClientForm ? (\r\n        <div className=\"new-client-form\">\r\n          {/* Formulaire de nouveau client */}\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Client;\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}