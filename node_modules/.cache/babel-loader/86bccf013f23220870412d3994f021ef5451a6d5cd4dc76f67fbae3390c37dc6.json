{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bonjour\\\\Desktop\\\\react\\\\frontend\\\\src\\\\components\\\\client.js\",\n  _s = $RefreshSig$();\n// // import React, { useState } from 'react';\n// // import './Client.css';\n// // /*import './components/NavBar';*/\n// // /*import { Navbar } from 'react-bootstrap';*/\n\n// // const Client = () => {\n// //   const [showNewClientForm, setShowNewClientForm] = useState(false);\n// //   const [newClient, setNewClient] = useState({\n// //     type: '',\n// //     reference: '',\n// //     entreprise: '',\n// //     prenom: '',\n// //     nom: '',\n// //     email: '',\n// //     numTel: ''\n// //   });\n// //   const [clients, setClients] = useState([]); \n// //   const [clientCount, setClientCount] = useState(0); \n\n// //   const handleNewClient = () => {\n// //     setShowNewClientForm(true);\n// //   };\n\n// //   const handleCancel = () => {\n// //     setShowNewClientForm(false);\n// //   };\n\n// //   const handleChange = (e) => {\n// //     const { name, value } = e.target;\n// //     setNewClient(prevState => ({\n// //       ...prevState,\n// //       [name]: value\n// //     }));\n// //   };\n\n// //   const handleSaveClient = () => {\n// //     setClientCount(prevCount => prevCount + 1);\n\n// //     const client = {\n// //       numero: clientCount + 1,\n// //       nom: newClient.nom,\n// //       prenom: newClient.prenom,\n// //       facturesEnAttente: 0,\n// //       facturesPayees: 0 \n// //     };\n\n// //     setClients(prevClients => [...prevClients, client]);\n\n// //     setNewClient({\n// //       type: '',\n// //       reference: '',\n// //       entreprise: '',\n// //       prenom: '',\n// //       nom: '',\n// //       email: '',\n// //       numTel: ''\n// //     });\n\n// //     setShowNewClientForm(false);\n// //   };\n// //   return (\n// //     <div className=\"client-page\">\n// //       <div className=\"left-side\">\n// //         <div className=\"left-top\">\n\n// //           <input type=\"text\" placeholder=\"Recherche...\" />\n// //           <button onClick={handleNewClient} className=\"green-button\">Nouveau client</button>\n// //         </div>\n// //         <div className=\"main-content\">\n// //           {showNewClientForm ? (\n// //             <div className=\"new-client-form\">\n// //               <h2>Nouveau client</h2>\n// //               <div className=\"form-group\">\n// //                <label htmlFor=\"type de client\">type de client :</label>\n// //                   <select id=\"type de client\">\n// //                     <option value=\"Client professionnel\">Client professionnel</option>\n// //                     <option value=\"Client particulier\">Client particulier</option>\n// //                     </select>\n// //                </div>\n// //               <div className=\"form-group\">\n// //               <label>Nom de l'entreprise: </label>\n// //               <input type=\"text\" name=\"reference\" value={newClient.reference} onChange={handleChange} />\n// //             </div>\n// //             <div className=\"form-group\">\n// //               <label>Nom: </label>\n// //               <input type=\"text\" name=\"reference\" value={newClient.reference} onChange={handleChange} />\n// //             </div>\n// //             <div className=\"form-group\">\n// //               <label>Prenom: </label>\n// //               <input type=\"text\" name=\"reference\" value={newClient.reference} onChange={handleChange} />\n// //             </div>\n// //             <div className=\"form-group\">\n// //               <label>Cin: </label>\n// //               <input type=\"text\" name=\"reference\" value={newClient.reference} onChange={handleChange} />\n// //             </div>\n// //             <div className=\"form-group\">\n// //               <label>Numéro de téléphone:</label>\n// //               <input type=\"text\" name=\"numTel\" value={newClient.numTel} onChange={handleChange} />\n// //             </div>\n// //             <div className=\"form-group\">\n// //               <label>Email :</label>\n// //               <input type=\"text\" name=\"email\" value={newClient.email} onChange={handleChange} />\n// //             </div>\n\n// //               <div className=\"form-group\">\n// //                 <button onClick={handleCancel} className=\"blue-button\">Annuler</button>\n// //                 <button onClick={handleSaveClient} className=\"blue-button\">Enregistrer</button>\n// //               </div>\n// //             </div>\n// //           ) : (\n// //             <div>\n// //               <h1>Clients</h1>\n// //               <p>Clients enregistrés avec votre abonnement : {clients.length}/5</p>\n// //               <table>\n// //                 <thead>\n// //                   <tr>\n// //                     <th>Numéro</th>\n// //                     <th>Client</th>\n// //                     <th>Factures en attente</th>\n// //                     <th>Factures payées</th>\n// //                   </tr>\n// //                 </thead>\n// //                 <tbody>\n// //                   {clients.map((client, index) => (\n// //                     <tr key={index}>\n// //                       <td>{client.numero}</td>\n// //                       <td>{`${client.prenom} ${client.nom}`}</td>\n// //                       <td>{client.facturesEnAttente}</td>\n// //                       <td>{client.facturesPayees}</td>\n// //                     </tr>\n// //                   ))}\n// //                 </tbody>\n// //               </table>\n// //             </div>\n// //           )}\n// //         </div>\n// //       </div>\n// //       <div className=\"right-side\">\n// //         <h1>Mes Clients</h1>\n// //         <p>Sélectionnez un client dans la liste de gauche pour voir ses détails</p>\n// //         <button>Importer Client</button>\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // export default Client;\n\n// import React, { useState } from 'react';\n// import './Client.css';\n\n// const Client = () => {\n//   const [showNewClientForm, setShowNewClientForm] = useState(false);\n//   const [newClient, setNewClient] = useState({\n//     type: '',\n//     reference: '',\n//     entreprise: '',\n//     prenom: '',\n//     nom: '',\n//     email: '',\n//     numTel: ''\n//   });\n//   const [clients, setClients] = useState([]); \n//   const [clientCount, setClientCount] = useState(0);\n//   const [selectedClient, setSelectedClient] = useState(null); // Nouvelle variable d'état pour stocker le client sélectionné\n\n//   const handleNewClient = () => {\n//     setShowNewClientForm(true);\n//   };\n\n//   const handleCancel = () => {\n//     setShowNewClientForm(false);\n//   };\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setNewClient(prevState => ({\n//       ...prevState,\n//       [name]: value\n//     }));\n//   };\n\n//   const handleSaveClient = () => {\n//     setClientCount(prevCount => prevCount + 1);\n\n//     const client = {\n//       numero: clientCount + 1,\n//       nom: newClient.nom,\n//       prenom: newClient.prenom,\n//       facturesEnAttente: 0,\n//       facturesPayees: 0 \n//     };\n\n//     setClients(prevClients => [...prevClients, client]);\n\n//     setNewClient({\n//       type: '',\n//       reference: '',\n//       entreprise: '',\n//       prenom: '',\n//       nom: '',\n//       email: '',\n//       numTel: ''\n//     });\n\n//     setShowNewClientForm(false);\n//   };\n\n//   const handleClientClick = (client) => {\n//     setSelectedClient(client);\n//   };\n\n//   return (\n//     <div className=\"client-page\">\n//       <div className=\"left-side\">\n//         <div className=\"left-top\">\n\n//           <input type=\"text\" placeholder=\"Recherche...\" />\n//           <button onClick={handleNewClient} className=\"green-button\">Nouveau client</button>\n//         </div>\n//         <div className=\"main-content\">\n//           {showNewClientForm ? (\n//             // Code pour le formulaire de création de nouveau client\n//           ) : \n\n//             <div>\n//               <h1>Clients</h1>\n//               <p>Clients enregistrés avec votre abonnement : {clients.length}/5</p>\n//               <table>\n//                 <thead>\n//                   <tr>\n//                     <th>Numéro</th>\n//                     <th>Client</th>\n//                     <th>Factures en attente</th>\n//                     <th>Factures payées</th>\n//                   </tr>\n//                 </thead>\n//                 <tbody>\n//                   {clients.map((client, index) => (\n//                     <tr key={index} onClick={() => handleClientClick(client)}> {/* Ajout d'un gestionnaire d'événement pour chaque ligne */}\n//                       <td>{client.numero}</td>\n//                       <td>{`${client.prenom} ${client.nom}`}</td>\n//                       <td>{client.facturesEnAttente}</td>\n//                       <td>{client.facturesPayees}</td>\n//                     </tr>\n//                   ))}\n//                 </tbody>\n//               </table>\n//             </div>\n//           )}\n//         </div>\n//       </div>\n//       <div className=\"right-side\">\n//         <h1>Mes Clients</h1>\n//         {selectedClient && ( {/* Vérification si un client est sélectionné */}\n//           <div>\n//             <p>Informations sur le client sélectionné :</p>\n//             <p>Nom: {selectedClient.nom}</p>\n//             <p>Prénom: {selectedClient.prenom}</p>\n//             {/* Afficher d'autres informations du client ici */}\n//           </div>\n//         )}\n//         <div>\n//         <p>Sélectionnez un client dans la liste de gauche pour voir ses détails</p>\n//         <button>Importer Client</button>\n//       </div>\n//   );\n// }\n\n// export default Client;\n\n// import React, { useState } from 'react';\n// import React, { useState } from 'react';\n// import './Client.css';\n\n// const Client = () => {\n//   const [showNewClientForm, setShowNewClientForm] = useState(false);\n//   const [newClient, setNewClient] = useState({\n//     type: '',\n//     reference: '',\n//     entreprise: '',\n//     prenom: '',\n//     nom: '',\n//     email: '',\n//     numTel: ''\n//   });\n//   const [clients, setClients] = useState([]); \n//   const [clientCount, setClientCount] = useState(0); \n//   const [selectedClient, setSelectedClient] = useState(null);\n\n//   const handleNewClient = () => {\n//     setShowNewClientForm(true);\n//   };\n\n//   const handleCancel = () => {\n//     setShowNewClientForm(false);\n//   };\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setNewClient(prevState => ({\n//       ...prevState,\n//       [name]: value\n//     }));\n//   };\n\n//   const handleSaveClient = () => {\n//     setClientCount(prevCount => prevCount + 1);\n\n//     const client = {\n//       numero: clientCount + 1,\n//       nom: newClient.nom,\n//       prenom: newClient.prenom,\n//       facturesEnAttente: 0,\n//       facturesPayees: 0 \n//     };\n\n//     setClients(prevClients => [...prevClients, client]);\n\n//     setNewClient({\n//       type: '',\n//       reference: '',\n//       entreprise: '',\n//       prenom: '',\n//       nom: '',\n//       email: '',\n//       numTel: ''\n//     });\n\n//     setShowNewClientForm(false);\n//   };\n\n//   const handleClientClick = (client) => {\n//     setSelectedClient(client);\n//   };\n\n//   const handleEditClient = () => {\n//   };\n\n//   const handleDeleteClient = () => {\n\n//   };\n\n//   return (\n//     <div className=\"client-page\">\n//       <div className=\"left-side\">\n//         <div className=\"left-top\">\n//           <input type=\"text\" placeholder=\"Recherche...\" />\n//           <button onClick={handleNewClient} className=\"green-button\">Nouveau client</button>\n//         </div>\n//         <div className=\"main-content\">\n//           {showNewClientForm ? (\n//             <div className=\"new-client-form\">\n//               <h2>Nouveau client</h2>\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"type de client\">type de client :</label>\n//                 <select id=\"type de client\">\n//                   <option value=\"Client professionnel\">Client professionnel</option>\n//                   <option value=\"Client particulier\">Client particulier</option>\n//                 </select>\n//               </div>\n//               <div className=\"form-group\">\n//                 <label>Nom de l'entreprise: </label>\n//                 <input type=\"text\" name=\"reference\" value={newClient.reference} onChange={handleChange} />\n//               </div>\n//               <div className=\"form-group\">\n//                 <label>Nom: </label>\n//                 <input type=\"text\" name=\"nom\" value={newClient.nom} onChange={handleChange} />\n//               </div>\n//               <div className=\"form-group\">\n//                 <label>Prenom: </label>\n//                 <input type=\"text\" name=\"prenom\" value={newClient.prenom} onChange={handleChange} />\n//               </div>\n//               <div className=\"form-group\">\n//                 <label>Cin: </label>\n//                 <input type=\"text\" name=\"cin\" value={newClient.cin} onChange={handleChange} />\n//               </div>\n//               <div className=\"form-group\">\n//                 <label>Numéro de téléphone:</label>\n//                 <input type=\"text\" name=\"numTel\" value={newClient.numTel} onChange={handleChange} />\n//               </div>\n//               <div className=\"form-group\">\n//                 <label>Email :</label>\n//                 <input type=\"text\" name=\"email\" value={newClient.email} onChange={handleChange} />\n//               </div>\n//               <div className=\"form-group\">\n//                 <button onClick={handleCancel} className=\"blue-button\">Annuler</button>\n//                 <button onClick={handleSaveClient} className=\"blue-button\">Enregistrer</button>\n//               </div>\n//             </div>\n//           ) : (\n//             <div>\n//               <h1>Clients</h1>\n//               <p>Clients enregistrés avec votre abonnement : {clients.length}/5</p>\n//               <table>\n//                 <thead>\n//                   <tr>\n//                     <th>Numéro</th>\n//                     <th>Client</th>\n//                     <th>Factures en attente</th>\n//                     <th>Factures payées</th>\n//                   </tr>\n//                 </thead>\n//                 <tbody>\n//                   {clients.map((client, index) => (\n//                     <tr key={index} onClick={() => handleClientClick(client)}>\n//                       <td>{client.numero}</td>\n//                       <td>{`${client.prenom} ${client.nom}`}</td>\n//                       <td>{client.facturesEnAttente}</td>\n//                       <td>{client.facturesPayees}</td>\n//                     </tr>\n//                   ))}\n//                 </tbody>\n//               </table>\n//             </div>\n//           )}\n//         </div>\n//       </div>\n//       <div className=\"right-side\">\n//         <h1>Mes Clients</h1>\n//         {selectedClient ? (\n//           <div>\n//             <h2>Détails du Client</h2>\n//             <p>Nom: {selectedClient.nom}</p>\n//             <p>Prénom: {selectedClient.prenom}</p>\n//             <p>Factures en attente: {selectedClient.facturesEnAttente}</p>\n//             <p>Factures payées: {selectedClient.facturesPayees}</p>\n//             <div>\n//               <button onClick={handleEditClient}>Modifier</button>\n//               <button onClick={handleDeleteClient}>Supprimer</button>\n//             </div>\n//           </div>\n//         ) : (\n//           <p>Sélectionnez un client dans la liste de gauche pour voir ses détails</p>\n//         )}\n//         {/* <button>Importer Client</button> */}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Client;\n\nimport React, { useState } from 'react';\nimport './Client.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Client = () => {\n  _s();\n  const [showNewClientForm, setShowNewClientForm] = useState(false);\n  const [newClient, setNewClient] = useState({\n    type: '',\n    reference: '',\n    entreprise: '',\n    prenom: '',\n    nom: '',\n    email: '',\n    numTel: ''\n  });\n  const [clients, setClients] = useState([]);\n  const [clientCount, setClientCount] = useState(0);\n  const [selectedClient, setSelectedClient] = useState(null);\n  const handleNewClient = () => {\n    setShowNewClientForm(true);\n  };\n  const handleCancel = () => {\n    setShowNewClientForm(false);\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewClient(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  const handleSaveClient = () => {\n    setClientCount(prevCount => prevCount + 1);\n    const client = {\n      numero: clientCount + 1,\n      nom: newClient.nom,\n      prenom: newClient.prenom,\n      facturesEnAttente: 0,\n      facturesPayees: 0\n    };\n    setClients(prevClients => [...prevClients, client]);\n    setNewClient({\n      type: '',\n      reference: '',\n      entreprise: '',\n      prenom: '',\n      nom: '',\n      email: '',\n      numTel: ''\n    });\n    setShowNewClientForm(false);\n  };\n  const handleClientClick = client => {\n    setSelectedClient(client);\n  };\n  const handleEditClient = () => {};\n  const handleDeleteClient = () => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"client-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-side\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-top\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Recherche...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNewClient,\n          className: \"green-button\",\n          children: \"Nouveau client\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content\",\n        children: showNewClientForm ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-client-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Nouveau client\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"type de client\",\n              children: \"type de client :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 528,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"type de client\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Client professionnel\",\n                children: \"Client professionnel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 530,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Client particulier\",\n                children: \"Client particulier\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 531,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 529,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 527,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Nom de l'entreprise: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 535,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"reference\",\n              value: newClient.reference,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 536,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Nom: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 539,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"nom\",\n              value: newClient.nom,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 540,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Prenom: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 543,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"prenom\",\n              value: newClient.prenom,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 544,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Cin: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 547,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"cin\",\n              value: newClient.cin,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 548,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Num\\xE9ro de t\\xE9l\\xE9phone:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 551,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"numTel\",\n              value: newClient.numTel,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 552,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Email :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 555,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"email\",\n              value: newClient.email,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 556,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 554,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleCancel,\n              className: \"blue-button\",\n              children: \"Annuler\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 559,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSaveClient,\n              className: \"blue-button\",\n              children: \"Enregistrer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 560,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 558,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Clients\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 565,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Clients enregistr\\xE9s avec votre abonnement : \", clients.length, \"/5\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 566,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Num\\xE9ro\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 570,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Client\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 571,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Factures en attente\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 572,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Factures pay\\xE9es\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 573,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 569,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 568,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: clients.map((client, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                onClick: () => handleClientClick(client),\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: client.numero\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 579,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: `${client.prenom} ${client.nom}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 580,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: client.facturesEnAttente\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 581,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: client.facturesPayees\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 582,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 578,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 576,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right-side\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Mes Clients\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"client-details-container\",\n        children: selectedClient ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"client-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"D\\xE9tails du Client\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Nom: \", selectedClient.nom]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 597,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Pr\\xE9nom: \", selectedClient.prenom]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 598,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Factures en attente: \", selectedClient.facturesEnAttente]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 599,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Factures pay\\xE9es: \", selectedClient.facturesPayees]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 600,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleEditClient,\n              children: \"Modifier\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 602,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleDeleteClient,\n              children: \"Supprimer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 603,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 601,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 595,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"S\\xE9lectionnez un client dans la liste de gauche pour voir ses d\\xE9tails\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 607,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 591,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 517,\n    columnNumber: 5\n  }, this);\n};\n_s(Client, \"+kPf4E3N8esVyWo/48oRgMVwyps=\");\n_c = Client;\nexport default Client;\nvar _c;\n$RefreshReg$(_c, \"Client\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Client","_s","showNewClientForm","setShowNewClientForm","newClient","setNewClient","type","reference","entreprise","prenom","nom","email","numTel","clients","setClients","clientCount","setClientCount","selectedClient","setSelectedClient","handleNewClient","handleCancel","handleChange","e","name","value","target","prevState","handleSaveClient","prevCount","client","numero","facturesEnAttente","facturesPayees","prevClients","handleClientClick","handleEditClient","handleDeleteClient","className","children","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","htmlFor","id","onChange","cin","length","map","index","_c","$RefreshReg$"],"sources":["C:/Users/Bonjour/Desktop/react/frontend/src/components/client.js"],"sourcesContent":["// // import React, { useState } from 'react';\r\n// // import './Client.css';\r\n// // /*import './components/NavBar';*/\r\n// // /*import { Navbar } from 'react-bootstrap';*/\r\n\r\n\r\n// // const Client = () => {\r\n// //   const [showNewClientForm, setShowNewClientForm] = useState(false);\r\n// //   const [newClient, setNewClient] = useState({\r\n// //     type: '',\r\n// //     reference: '',\r\n// //     entreprise: '',\r\n// //     prenom: '',\r\n// //     nom: '',\r\n// //     email: '',\r\n// //     numTel: ''\r\n// //   });\r\n// //   const [clients, setClients] = useState([]); \r\n// //   const [clientCount, setClientCount] = useState(0); \r\n\r\n// //   const handleNewClient = () => {\r\n// //     setShowNewClientForm(true);\r\n// //   };\r\n\r\n// //   const handleCancel = () => {\r\n// //     setShowNewClientForm(false);\r\n// //   };\r\n\r\n// //   const handleChange = (e) => {\r\n// //     const { name, value } = e.target;\r\n// //     setNewClient(prevState => ({\r\n// //       ...prevState,\r\n// //       [name]: value\r\n// //     }));\r\n// //   };\r\n\r\n// //   const handleSaveClient = () => {\r\n// //     setClientCount(prevCount => prevCount + 1);\r\n\r\n// //     const client = {\r\n// //       numero: clientCount + 1,\r\n// //       nom: newClient.nom,\r\n// //       prenom: newClient.prenom,\r\n// //       facturesEnAttente: 0,\r\n// //       facturesPayees: 0 \r\n// //     };\r\n\r\n// //     setClients(prevClients => [...prevClients, client]);\r\n\r\n// //     setNewClient({\r\n// //       type: '',\r\n// //       reference: '',\r\n// //       entreprise: '',\r\n// //       prenom: '',\r\n// //       nom: '',\r\n// //       email: '',\r\n// //       numTel: ''\r\n// //     });\r\n\r\n// //     setShowNewClientForm(false);\r\n// //   };\r\n// //   return (\r\n// //     <div className=\"client-page\">\r\n// //       <div className=\"left-side\">\r\n// //         <div className=\"left-top\">\r\n        \r\n// //           <input type=\"text\" placeholder=\"Recherche...\" />\r\n// //           <button onClick={handleNewClient} className=\"green-button\">Nouveau client</button>\r\n// //         </div>\r\n// //         <div className=\"main-content\">\r\n// //           {showNewClientForm ? (\r\n// //             <div className=\"new-client-form\">\r\n// //               <h2>Nouveau client</h2>\r\n// //               <div className=\"form-group\">\r\n// //                <label htmlFor=\"type de client\">type de client :</label>\r\n// //                   <select id=\"type de client\">\r\n// //                     <option value=\"Client professionnel\">Client professionnel</option>\r\n// //                     <option value=\"Client particulier\">Client particulier</option>\r\n// //                     </select>\r\n// //                </div>\r\n// //               <div className=\"form-group\">\r\n// //               <label>Nom de l'entreprise: </label>\r\n// //               <input type=\"text\" name=\"reference\" value={newClient.reference} onChange={handleChange} />\r\n// //             </div>\r\n// //             <div className=\"form-group\">\r\n// //               <label>Nom: </label>\r\n// //               <input type=\"text\" name=\"reference\" value={newClient.reference} onChange={handleChange} />\r\n// //             </div>\r\n// //             <div className=\"form-group\">\r\n// //               <label>Prenom: </label>\r\n// //               <input type=\"text\" name=\"reference\" value={newClient.reference} onChange={handleChange} />\r\n// //             </div>\r\n// //             <div className=\"form-group\">\r\n// //               <label>Cin: </label>\r\n// //               <input type=\"text\" name=\"reference\" value={newClient.reference} onChange={handleChange} />\r\n// //             </div>\r\n// //             <div className=\"form-group\">\r\n// //               <label>Numéro de téléphone:</label>\r\n// //               <input type=\"text\" name=\"numTel\" value={newClient.numTel} onChange={handleChange} />\r\n// //             </div>\r\n// //             <div className=\"form-group\">\r\n// //               <label>Email :</label>\r\n// //               <input type=\"text\" name=\"email\" value={newClient.email} onChange={handleChange} />\r\n// //             </div>\r\n            \r\n// //               <div className=\"form-group\">\r\n// //                 <button onClick={handleCancel} className=\"blue-button\">Annuler</button>\r\n// //                 <button onClick={handleSaveClient} className=\"blue-button\">Enregistrer</button>\r\n// //               </div>\r\n// //             </div>\r\n// //           ) : (\r\n// //             <div>\r\n// //               <h1>Clients</h1>\r\n// //               <p>Clients enregistrés avec votre abonnement : {clients.length}/5</p>\r\n// //               <table>\r\n// //                 <thead>\r\n// //                   <tr>\r\n// //                     <th>Numéro</th>\r\n// //                     <th>Client</th>\r\n// //                     <th>Factures en attente</th>\r\n// //                     <th>Factures payées</th>\r\n// //                   </tr>\r\n// //                 </thead>\r\n// //                 <tbody>\r\n// //                   {clients.map((client, index) => (\r\n// //                     <tr key={index}>\r\n// //                       <td>{client.numero}</td>\r\n// //                       <td>{`${client.prenom} ${client.nom}`}</td>\r\n// //                       <td>{client.facturesEnAttente}</td>\r\n// //                       <td>{client.facturesPayees}</td>\r\n// //                     </tr>\r\n// //                   ))}\r\n// //                 </tbody>\r\n// //               </table>\r\n// //             </div>\r\n// //           )}\r\n// //         </div>\r\n// //       </div>\r\n// //       <div className=\"right-side\">\r\n// //         <h1>Mes Clients</h1>\r\n// //         <p>Sélectionnez un client dans la liste de gauche pour voir ses détails</p>\r\n// //         <button>Importer Client</button>\r\n// //       </div>\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default Client;\r\n\r\n// import React, { useState } from 'react';\r\n// import './Client.css';\r\n\r\n// const Client = () => {\r\n//   const [showNewClientForm, setShowNewClientForm] = useState(false);\r\n//   const [newClient, setNewClient] = useState({\r\n//     type: '',\r\n//     reference: '',\r\n//     entreprise: '',\r\n//     prenom: '',\r\n//     nom: '',\r\n//     email: '',\r\n//     numTel: ''\r\n//   });\r\n//   const [clients, setClients] = useState([]); \r\n//   const [clientCount, setClientCount] = useState(0);\r\n//   const [selectedClient, setSelectedClient] = useState(null); // Nouvelle variable d'état pour stocker le client sélectionné\r\n\r\n//   const handleNewClient = () => {\r\n//     setShowNewClientForm(true);\r\n//   };\r\n\r\n//   const handleCancel = () => {\r\n//     setShowNewClientForm(false);\r\n//   };\r\n\r\n//   const handleChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setNewClient(prevState => ({\r\n//       ...prevState,\r\n//       [name]: value\r\n//     }));\r\n//   };\r\n\r\n//   const handleSaveClient = () => {\r\n//     setClientCount(prevCount => prevCount + 1);\r\n\r\n//     const client = {\r\n//       numero: clientCount + 1,\r\n//       nom: newClient.nom,\r\n//       prenom: newClient.prenom,\r\n//       facturesEnAttente: 0,\r\n//       facturesPayees: 0 \r\n//     };\r\n\r\n//     setClients(prevClients => [...prevClients, client]);\r\n\r\n//     setNewClient({\r\n//       type: '',\r\n//       reference: '',\r\n//       entreprise: '',\r\n//       prenom: '',\r\n//       nom: '',\r\n//       email: '',\r\n//       numTel: ''\r\n//     });\r\n\r\n//     setShowNewClientForm(false);\r\n//   };\r\n\r\n//   const handleClientClick = (client) => {\r\n//     setSelectedClient(client);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"client-page\">\r\n//       <div className=\"left-side\">\r\n//         <div className=\"left-top\">\r\n        \r\n//           <input type=\"text\" placeholder=\"Recherche...\" />\r\n//           <button onClick={handleNewClient} className=\"green-button\">Nouveau client</button>\r\n//         </div>\r\n//         <div className=\"main-content\">\r\n//           {showNewClientForm ? (\r\n//             // Code pour le formulaire de création de nouveau client\r\n//           ) : \r\n          \r\n//             <div>\r\n//               <h1>Clients</h1>\r\n//               <p>Clients enregistrés avec votre abonnement : {clients.length}/5</p>\r\n//               <table>\r\n//                 <thead>\r\n//                   <tr>\r\n//                     <th>Numéro</th>\r\n//                     <th>Client</th>\r\n//                     <th>Factures en attente</th>\r\n//                     <th>Factures payées</th>\r\n//                   </tr>\r\n//                 </thead>\r\n//                 <tbody>\r\n//                   {clients.map((client, index) => (\r\n//                     <tr key={index} onClick={() => handleClientClick(client)}> {/* Ajout d'un gestionnaire d'événement pour chaque ligne */}\r\n//                       <td>{client.numero}</td>\r\n//                       <td>{`${client.prenom} ${client.nom}`}</td>\r\n//                       <td>{client.facturesEnAttente}</td>\r\n//                       <td>{client.facturesPayees}</td>\r\n//                     </tr>\r\n//                   ))}\r\n//                 </tbody>\r\n//               </table>\r\n//             </div>\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n//       <div className=\"right-side\">\r\n//         <h1>Mes Clients</h1>\r\n//         {selectedClient && ( {/* Vérification si un client est sélectionné */}\r\n//           <div>\r\n//             <p>Informations sur le client sélectionné :</p>\r\n//             <p>Nom: {selectedClient.nom}</p>\r\n//             <p>Prénom: {selectedClient.prenom}</p>\r\n//             {/* Afficher d'autres informations du client ici */}\r\n//           </div>\r\n//         )}\r\n//         <div>\r\n//         <p>Sélectionnez un client dans la liste de gauche pour voir ses détails</p>\r\n//         <button>Importer Client</button>\r\n//       </div>\r\n//   );\r\n// }\r\n\r\n// export default Client;\r\n\r\n// import React, { useState } from 'react';\r\n// import React, { useState } from 'react';\r\n// import './Client.css';\r\n\r\n// const Client = () => {\r\n//   const [showNewClientForm, setShowNewClientForm] = useState(false);\r\n//   const [newClient, setNewClient] = useState({\r\n//     type: '',\r\n//     reference: '',\r\n//     entreprise: '',\r\n//     prenom: '',\r\n//     nom: '',\r\n//     email: '',\r\n//     numTel: ''\r\n//   });\r\n//   const [clients, setClients] = useState([]); \r\n//   const [clientCount, setClientCount] = useState(0); \r\n//   const [selectedClient, setSelectedClient] = useState(null);\r\n\r\n//   const handleNewClient = () => {\r\n//     setShowNewClientForm(true);\r\n//   };\r\n\r\n//   const handleCancel = () => {\r\n//     setShowNewClientForm(false);\r\n//   };\r\n\r\n//   const handleChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setNewClient(prevState => ({\r\n//       ...prevState,\r\n//       [name]: value\r\n//     }));\r\n//   };\r\n\r\n//   const handleSaveClient = () => {\r\n//     setClientCount(prevCount => prevCount + 1);\r\n\r\n//     const client = {\r\n//       numero: clientCount + 1,\r\n//       nom: newClient.nom,\r\n//       prenom: newClient.prenom,\r\n//       facturesEnAttente: 0,\r\n//       facturesPayees: 0 \r\n//     };\r\n\r\n//     setClients(prevClients => [...prevClients, client]);\r\n\r\n//     setNewClient({\r\n//       type: '',\r\n//       reference: '',\r\n//       entreprise: '',\r\n//       prenom: '',\r\n//       nom: '',\r\n//       email: '',\r\n//       numTel: ''\r\n//     });\r\n\r\n//     setShowNewClientForm(false);\r\n//   };\r\n\r\n//   const handleClientClick = (client) => {\r\n//     setSelectedClient(client);\r\n//   };\r\n\r\n//   const handleEditClient = () => {\r\n//   };\r\n\r\n//   const handleDeleteClient = () => {\r\n    \r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"client-page\">\r\n//       <div className=\"left-side\">\r\n//         <div className=\"left-top\">\r\n//           <input type=\"text\" placeholder=\"Recherche...\" />\r\n//           <button onClick={handleNewClient} className=\"green-button\">Nouveau client</button>\r\n//         </div>\r\n//         <div className=\"main-content\">\r\n//           {showNewClientForm ? (\r\n//             <div className=\"new-client-form\">\r\n//               <h2>Nouveau client</h2>\r\n//               <div className=\"form-group\">\r\n//                 <label htmlFor=\"type de client\">type de client :</label>\r\n//                 <select id=\"type de client\">\r\n//                   <option value=\"Client professionnel\">Client professionnel</option>\r\n//                   <option value=\"Client particulier\">Client particulier</option>\r\n//                 </select>\r\n//               </div>\r\n//               <div className=\"form-group\">\r\n//                 <label>Nom de l'entreprise: </label>\r\n//                 <input type=\"text\" name=\"reference\" value={newClient.reference} onChange={handleChange} />\r\n//               </div>\r\n//               <div className=\"form-group\">\r\n//                 <label>Nom: </label>\r\n//                 <input type=\"text\" name=\"nom\" value={newClient.nom} onChange={handleChange} />\r\n//               </div>\r\n//               <div className=\"form-group\">\r\n//                 <label>Prenom: </label>\r\n//                 <input type=\"text\" name=\"prenom\" value={newClient.prenom} onChange={handleChange} />\r\n//               </div>\r\n//               <div className=\"form-group\">\r\n//                 <label>Cin: </label>\r\n//                 <input type=\"text\" name=\"cin\" value={newClient.cin} onChange={handleChange} />\r\n//               </div>\r\n//               <div className=\"form-group\">\r\n//                 <label>Numéro de téléphone:</label>\r\n//                 <input type=\"text\" name=\"numTel\" value={newClient.numTel} onChange={handleChange} />\r\n//               </div>\r\n//               <div className=\"form-group\">\r\n//                 <label>Email :</label>\r\n//                 <input type=\"text\" name=\"email\" value={newClient.email} onChange={handleChange} />\r\n//               </div>\r\n//               <div className=\"form-group\">\r\n//                 <button onClick={handleCancel} className=\"blue-button\">Annuler</button>\r\n//                 <button onClick={handleSaveClient} className=\"blue-button\">Enregistrer</button>\r\n//               </div>\r\n//             </div>\r\n//           ) : (\r\n//             <div>\r\n//               <h1>Clients</h1>\r\n//               <p>Clients enregistrés avec votre abonnement : {clients.length}/5</p>\r\n//               <table>\r\n//                 <thead>\r\n//                   <tr>\r\n//                     <th>Numéro</th>\r\n//                     <th>Client</th>\r\n//                     <th>Factures en attente</th>\r\n//                     <th>Factures payées</th>\r\n//                   </tr>\r\n//                 </thead>\r\n//                 <tbody>\r\n//                   {clients.map((client, index) => (\r\n//                     <tr key={index} onClick={() => handleClientClick(client)}>\r\n//                       <td>{client.numero}</td>\r\n//                       <td>{`${client.prenom} ${client.nom}`}</td>\r\n//                       <td>{client.facturesEnAttente}</td>\r\n//                       <td>{client.facturesPayees}</td>\r\n//                     </tr>\r\n//                   ))}\r\n//                 </tbody>\r\n//               </table>\r\n//             </div>\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n//       <div className=\"right-side\">\r\n//         <h1>Mes Clients</h1>\r\n//         {selectedClient ? (\r\n//           <div>\r\n//             <h2>Détails du Client</h2>\r\n//             <p>Nom: {selectedClient.nom}</p>\r\n//             <p>Prénom: {selectedClient.prenom}</p>\r\n//             <p>Factures en attente: {selectedClient.facturesEnAttente}</p>\r\n//             <p>Factures payées: {selectedClient.facturesPayees}</p>\r\n//             <div>\r\n//               <button onClick={handleEditClient}>Modifier</button>\r\n//               <button onClick={handleDeleteClient}>Supprimer</button>\r\n//             </div>\r\n//           </div>\r\n//         ) : (\r\n//           <p>Sélectionnez un client dans la liste de gauche pour voir ses détails</p>\r\n//         )}\r\n//         {/* <button>Importer Client</button> */}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Client;\r\n\r\nimport React, { useState } from 'react';\r\nimport './Client.css';\r\n\r\nconst Client = () => {\r\n  const [showNewClientForm, setShowNewClientForm] = useState(false);\r\n  const [newClient, setNewClient] = useState({\r\n    type: '',\r\n    reference: '',\r\n    entreprise: '',\r\n    prenom: '',\r\n    nom: '',\r\n    email: '',\r\n    numTel: ''\r\n  });\r\n  const [clients, setClients] = useState([]); \r\n  const [clientCount, setClientCount] = useState(0); \r\n  const [selectedClient, setSelectedClient] = useState(null);\r\n\r\n  const handleNewClient = () => {\r\n    setShowNewClientForm(true);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setShowNewClientForm(false);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewClient(prevState => ({\r\n      ...prevState,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const handleSaveClient = () => {\r\n    setClientCount(prevCount => prevCount + 1);\r\n\r\n    const client = {\r\n      numero: clientCount + 1,\r\n      nom: newClient.nom,\r\n      prenom: newClient.prenom,\r\n      facturesEnAttente: 0,\r\n      facturesPayees: 0 \r\n    };\r\n\r\n    setClients(prevClients => [...prevClients, client]);\r\n\r\n    setNewClient({\r\n      type: '',\r\n      reference: '',\r\n      entreprise: '',\r\n      prenom: '',\r\n      nom: '',\r\n      email: '',\r\n      numTel: ''\r\n    });\r\n\r\n    setShowNewClientForm(false);\r\n  };\r\n\r\n  const handleClientClick = (client) => {\r\n    setSelectedClient(client);\r\n  };\r\n\r\n  const handleEditClient = () => {\r\n  };\r\n\r\n  const handleDeleteClient = () => {\r\n    \r\n  };\r\n\r\n  return (\r\n    <div className=\"client-page\">\r\n      <div className=\"left-side\">\r\n        <div className=\"left-top\">\r\n          <input type=\"text\" placeholder=\"Recherche...\" />\r\n          <button onClick={handleNewClient} className=\"green-button\">Nouveau client</button>\r\n        </div>\r\n        <div className=\"main-content\">\r\n          {showNewClientForm ? (\r\n            <div className=\"new-client-form\">\r\n              <h2>Nouveau client</h2>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"type de client\">type de client :</label>\r\n                <select id=\"type de client\">\r\n                  <option value=\"Client professionnel\">Client professionnel</option>\r\n                  <option value=\"Client particulier\">Client particulier</option>\r\n                </select>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Nom de l'entreprise: </label>\r\n                <input type=\"text\" name=\"reference\" value={newClient.reference} onChange={handleChange} />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Nom: </label>\r\n                <input type=\"text\" name=\"nom\" value={newClient.nom} onChange={handleChange} />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Prenom: </label>\r\n                <input type=\"text\" name=\"prenom\" value={newClient.prenom} onChange={handleChange} />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Cin: </label>\r\n                <input type=\"text\" name=\"cin\" value={newClient.cin} onChange={handleChange} />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Numéro de téléphone:</label>\r\n                <input type=\"text\" name=\"numTel\" value={newClient.numTel} onChange={handleChange} />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Email :</label>\r\n                <input type=\"text\" name=\"email\" value={newClient.email} onChange={handleChange} />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <button onClick={handleCancel} className=\"blue-button\">Annuler</button>\r\n                <button onClick={handleSaveClient} className=\"blue-button\">Enregistrer</button>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <h1>Clients</h1>\r\n              <p>Clients enregistrés avec votre abonnement : {clients.length}/5</p>\r\n              <table>\r\n                <thead>\r\n                  <tr>\r\n                    <th>Numéro</th>\r\n                    <th>Client</th>\r\n                    <th>Factures en attente</th>\r\n                    <th>Factures payées</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {clients.map((client, index) => (\r\n                    <tr key={index} onClick={() => handleClientClick(client)}>\r\n                      <td>{client.numero}</td>\r\n                      <td>{`${client.prenom} ${client.nom}`}</td>\r\n                      <td>{client.facturesEnAttente}</td>\r\n                      <td>{client.facturesPayees}</td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"right-side\">\r\n        <h1>Mes Clients</h1>\r\n        <div className=\"client-details-container\">\r\n          {selectedClient ? (\r\n            <div className=\"client-details\">\r\n              <h2>Détails du Client</h2>\r\n              <p>Nom: {selectedClient.nom}</p>\r\n              <p>Prénom: {selectedClient.prenom}</p>\r\n              <p>Factures en attente: {selectedClient.facturesEnAttente}</p>\r\n              <p>Factures payées: {selectedClient.facturesPayees}</p>\r\n              <div>\r\n                <button onClick={handleEditClient}>Modifier</button>\r\n                <button onClick={handleDeleteClient}>Supprimer</button>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <p>Sélectionnez un client dans la liste de gauche pour voir ses détails</p>\r\n          )}\r\n        </div>\r\n        {/* <button>Importer Client</button> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Client;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC;IACzCS,IAAI,EAAE,EAAE;IACRC,SAAS,EAAE,EAAE;IACbC,UAAU,EAAE,EAAE;IACdC,MAAM,EAAE,EAAE;IACVC,GAAG,EAAE,EAAE;IACPC,K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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}